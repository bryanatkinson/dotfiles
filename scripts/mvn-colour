#!/bin/bash

# Formatting constants
BOLD=`tput bold`
BOLD=
UNDERLINE_ON=`tput smul`
UNDERLINE_OFF=`tput rmul`
TEXT_BLACK=`tput setaf 0`
TEXT_RED=`tput setaf 1`
TEXT_GREEN=`tput setaf 2`
TEXT_YELLOW=`tput setaf 3`
TEXT_BLUE=`tput setaf 4`
TEXT_BLUE=
TEXT_MAGENTA=`tput setaf 5`
TEXT_CYAN=`tput setaf 6`
TEXT_WHITE=`tput setaf 7`
BACKGROUND_BLACK=`tput setab 0`
BACKGROUND_RED=`tput setab 1`
BACKGROUND_GREEN=`tput setab 2`
BACKGROUND_YELLOW=`tput setab 3`
BACKGROUND_BLUE=`tput setab 4`
BACKGROUND_MAGENTA=`tput setab 5`
BACKGROUND_CYAN=`tput setab 6`
BACKGROUND_WHITE=`tput setab 7`
RESET_FORMATTING=`tput sgr0`
 
# Filter mvn output using sed
if [ -n "${VIM_ERROR_HIGHLIGHT}" ]; then
    gvim --remote-send "<Esc>:HierClear<CR>"
fi
mvn $@ 2>&1 | tee >(grep '^\[ERROR\] \/' > ~/mvn_quickfix) | sed -e "s/\(\[INFO\]\ BUILD SUCCESS[A-Z]*\)/${BOLD}${TEXT_GREEN}\1${RESET_FORMATTING}/g" \
             -e "s/\(\[INFO\]\ BUILD FAILURE\)/${BOLD}${TEXT_RED}\1${RESET_FORMATTING}/g" \
             -e "s/\(\[INFO\]\ --------.*\)/${BOLD}${TEXT_CYAN}\1${RESET_FORMATTING}/g" \
             -e "s/\(\[WARNING\]\)/${BOLD}${TEXT_YELLOW}\1${RESET_FORMATTING}/g" \
             -e "s/\(\[ERROR\]\)/${BOLD}${TEXT_RED}\1${RESET_FORMATTING}/g" \
             -e "s/Tests run: \([^,]*\), Failures: \([^,]*\), Errors: \([^,]*\), Skipped: \([^,]*\)/${BOLD}${TEXT_GREEN}Tests run: \1${RESET_FORMATTING}, Failures: ${BOLD}${TEXT_RED}\2${RESET_FORMATTING}, Errors: ${BOLD}${TEXT_RED}\3${RESET_FORMATTING}, Skipped: ${BOLD}${TEXT_YELLOW}\4${RESET_FORMATTING}/g" 
rc=$?

if [ -n "${VIM_ERROR_HIGHLIGHT}" ]; then
    gvim --remote-send "<Esc>:cfile ~/mvn_quickfix<CR>:HierUpdate<CR>"
fi
# Make sure formatting is reset
echo -ne ${RESET_FORMATTING}

exit $?
